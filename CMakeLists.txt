include(${CMAKE_CURRENT_SOURCE_DIR}/cmake/gcc-arm-none-eabi.cmake)
cmake_minimum_required(VERSION 3.22)

# Setup compiler settings
set(CMAKE_C_STANDARD                11)
set(CMAKE_C_STANDARD_REQUIRED       ON)
set(CMAKE_C_EXTENSIONS              ON)
set(CMAKE_CXX_STANDARD              20)
set(CMAKE_CXX_STANDARD_REQUIRED     ON)
set(CMAKE_CXX_EXTENSIONS            ON)
set(PROJ_PATH                       ${CMAKE_CURRENT_SOURCE_DIR})
message("Build type: "              ${CMAKE_BUILD_TYPE})

#
# Core project settings
#
project("BlackPill")
enable_language(C CXX ASM)

set(OPENOCD_PRINT TRUE)

#
# Core MCU flags, CPU, instruction set and FPU setup
# Needs to be set properly for your MCU
#
set(CPU_PARAMETERS
    -mthumb
    # This needs attention to properly set for used MCU
    -mcpu=cortex-m4
    -mfpu=fpv4-sp-d16	
    -mfloat-abi=hard
)

# Set linker script
set(linker_script_SRC               ${PROJ_PATH}/STM32F401CCUX_FLASH.ld)
set(EXECUTABLE                      ${CMAKE_PROJECT_NAME})

#
# List of source files to compile
#
FILE(GLOB_RECURSE CORE_SRC       ${PROJ_PATH}/Core/Src/*.c)
FILE(GLOB_RECURSE CORE_STARTUP   ${PROJ_PATH}/Core/Startup/*.s)
FILE(GLOB_RECURSE DRIVER_HAL_SRC ${PROJ_PATH}/Drivers/*HAL_Driver/*.c)

IF(${OPENOCD_PRINT})
    LIST(REMOVE_ITEM CORE_SRC ${PROJ_PATH}/Core/Src/syscalls.c)
ENDIF()

set(sources_SRCS
    # Put here your source files, one in each line, relative to CMakeLists.txt file location
    ${CORE_SRC}
    ${CORE_STARTUP}
    ${DRIVER_HAL_SRC}
    )

#
# Include directories
#

FILE(GLOB CORE_INC                LIST_DIRECTORIES  TRUE  ${PROJ_PATH}/Core/Inc)
FILE(GLOB DRIVER_HAL_INC          LIST_DIRECTORIES  TRUE  ${PROJ_PATH}/Drivers/*HAL_Driver/Inc)
FILE(GLOB DRIVER_CMSIS_INC        LIST_DIRECTORIES  TRUE  ${PROJ_PATH}/Drivers/CMSIS/Include)
FILE(GLOB DRIVER_CMSIS_DEVICE_INC LIST_DIRECTORIES  TRUE  ${PROJ_PATH}/Drivers/CMSIS/Device/ST/*/Include)

message(${DRIVER_HAL_INC})

set(include_path_DIRS
    # Put here your include dirs, one in each line, relative to CMakeLists.txt file location
    ${CORE_INC}
    ${DRIVER_HAL_INC}
    ${DRIVER_CMSIS_INC}
    ${DRIVER_CMSIS_DEVICE_INC}
)

#
# Symbols definition
#
set(symbols_SYMB
    # Put here your symbols (preprocessor defines), one in each line
    # Encapsulate them with double quotes for safety purpose
    "DEBUG"
    "STM32F401xC"
    "USE_HAL_DRIVER"
)

# Executable files
add_executable(${EXECUTABLE} ${sources_SRCS})

# Include paths
target_include_directories(${EXECUTABLE} PRIVATE ${include_path_DIRS})

# Project symbols
target_compile_definitions(${EXECUTABLE} PRIVATE ${symbols_SYMB})

# Compiler options
target_compile_options(${EXECUTABLE} PRIVATE
    ${CPU_PARAMETERS}
    -Wall
    -Wextra
    -Wpedantic
    -Wno-unused-parameter
    # Full debug configuration
    -Og -g3 -ggdb
)

# Linker options
target_link_options(${EXECUTABLE} PRIVATE
    -T${linker_script_SRC}
    ${CPU_PARAMETERS}
    -Wl,-Map=${CMAKE_PROJECT_NAME}.map
    # --specs=nosys.specs
    --specs=rdimon.specs
    -lrdimon
    -u _printf_float                # STDIO float formatting support
    -Wl,--start-group
    -lc
    -lm
    -lstdc++
    -lsupc++
    -Wl,--end-group
    -Wl,--print-memory-usage
)

# Execute post-build to print size
add_custom_command(TARGET ${EXECUTABLE} POST_BUILD
    COMMAND ${CMAKE_SIZE} $<TARGET_FILE:${EXECUTABLE}>
)

# Convert output to hex and binary
add_custom_command(TARGET ${EXECUTABLE} POST_BUILD
    COMMAND ${CMAKE_OBJCOPY} -O ihex $<TARGET_FILE:${EXECUTABLE}> ${EXECUTABLE}.hex
)

# Convert to bin file -> add conditional check?
add_custom_command(TARGET ${EXECUTABLE} POST_BUILD
    COMMAND ${CMAKE_OBJCOPY} -O binary $<TARGET_FILE:${EXECUTABLE}> ${EXECUTABLE}.bin
)